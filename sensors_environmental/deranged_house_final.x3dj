{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Interactive",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "https://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "generator",
          "@content": "x3d-tidy V2.1.21, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "modified",
          "@content": "Tue, 12 Aug 2025 06:25:35 GMT"
        }
      ]
    },
    "Scene": {
      "-children": [
        { "ProtoDeclare":
          {
            "@name":"Door",
            "ProtoInterface": {

            },
            "ProtoBody": {
              "-children": [
                { "Group":
                  {
                    "-children": [
                      { "TimeSensor":
                        {
                          "@DEF": "TimerOpen"
                        }
                      },
                      { "OrientationInterpolator":
                        {
                          "@DEF": "OrientOpen",
                          "@key": [
                            0,
                            1
                          ],
                          "@keyValue": [
                            0, 0, 1, 0,
                            0, 0, 1, 1.57
                          ]
                        }
                      },
                      { "TimeSensor":
                        {
                          "@DEF": "TimerClose"
                        }
                      },
                      { "OrientationInterpolator":
                        {
                          "@DEF": "OrientClose",
                          "@key": [
                            0,
                            1
                          ],
                          "@keyValue": [
                            0, 0, 1, 1.57,
                            0, 0, 1, 0
                          ]
                        }
                      },
                      { "Transform":
                        {
                          "@DEF": "DoorTransform",
                          "@center": [ 0, -1, 0 ],
                          "-children": [
                            { "Inline":
                              {
                                "@global": true,
                                "@url": [
                                  "deranged_house_door.wrl"
                                ]
                              }
                            }
                          ]
                        }
                      },
                      { "Transform":
                        {
                          "@translation": [ -1, 0, 1.3 ],
                          "-children": [
                            { "ProximitySensor":
                              {
                                "@DEF": "ProxSens",
                                "@size": [ 5, 2, 2.5 ]
                              }
                            },
                            { "Switch":
                              {
                                "@DEF": "ProxSensVisualize",
                                "-children": [
                                  { "Collision":
                                    {
                                      "@enabled": false,
                                      "-children": [
                                        { "Shape":
                                          {
                                            "-appearance": { "Appearance":
                                              {
                                                "-material": { "Material":
                                                  {
                                                    "@diffuseColor": [ 2, 2, 0 ],
                                                    "@transparency": 0.5
                                                  }
                                                }
                                              }
                                            },
                                            "-geometry": { "Box":
                                              {
                                                "@size": [ 5, 2, 2.5 ]
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      { "KeySensor":
                        {
                          "@DEF": "K"
                        }
                      },
                      { "Script":
                        {
                          "@DEF": "Scr",
                          "field": [
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFBool",
                              "@name": "open_plays"
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFBool",
                              "@name": "close_plays"
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFTime",
                              "@name": "open_elapsedTime",
                              "@value": 0
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFTime",
                              "@name": "close_elapsedTime",
                              "@value": 0
                            },
                            {
                              "@accessType": "inputOnly",
                              "@type": "SFTime",
                              "@name": "start_open"
                            },
                            {
                              "@accessType": "inputOnly",
                              "@type": "SFTime",
                              "@name": "start_close"
                            },
                            {
                              "@accessType": "outputOnly",
                              "@type": "SFTime",
                              "@name": "open_start_time"
                            },
                            {
                              "@accessType": "outputOnly",
                              "@type": "SFTime",
                              "@name": "close_start_time"
                            },
                            {
                              "@accessType": "inputOnly",
                              "@type": "SFString",
                              "@name": "key_press"
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFInt32",
                              "@name": "prox_sensor_visualize",
                              "@value": -1
                            }
                          ],
                          "#sourceCode": [
                            "castlescript:\r",
                            "          function start_open(value, timestamp)\r",
                            "            if(open_plays, 1 { do nothing, return anything },\r",
                            "              if(close_plays,\r",
                            "                close_start_time := -1000;\r",
                            "                open_start_time := timestamp - (1-close_elapsedTime),\r",
                            "                open_start_time := timestamp))\r",
                            "\r",
                            "          function start_close(value, timestamp)\r",
                            "            if(close_plays, 1 { do nothing, return anything },\r",
                            "              if(open_plays,\r",
                            "                { The crucial point: you want to start closing\r",
                            "                  ih the middle of opening.\r",
                            "\r",
                            "                  The door is already partially opened, by open_elapsedTime,\r",
                            "                  so cycleInterval-open_elapsedTime time already passed\r",
                            "                  from closing. cycleInterval = always 1 in this case.\r",
                            "\r",
                            "                  Also, you want to actually stop opening, this can be done\r",
                            "                  by just setting open_start_time to some negative value. }\r",
                            "                open_start_time := -1000;\r",
                            "                close_start_time := timestamp - (1-open_elapsedTime),\r",
                            "                close_start_time := timestamp))\r",
                            "\r",
                            "          function key_press(value, timestamp)\r",
                            "            when (value = 'b',\r",
                            "              { On each 'b' press, toggle prox_sensor_visualize between -1 and 0 }\r",
                            "              prox_sensor_visualize := - prox_sensor_visualize - 1)\r",
                            "        "
                          ]
                        }
                      }
                    ]
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "TimerOpen",
                    "@fromField": "isActive",
                    "@toNode": "Scr",
                    "@toField": "set_open_plays"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "TimerOpen",
                    "@fromField": "elapsedTime",
                    "@toNode": "Scr",
                    "@toField": "set_open_elapsedTime"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "TimerClose",
                    "@fromField": "isActive",
                    "@toNode": "Scr",
                    "@toField": "set_close_plays"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "TimerClose",
                    "@fromField": "elapsedTime",
                    "@toNode": "Scr",
                    "@toField": "set_close_elapsedTime"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "ProxSens",
                    "@fromField": "enterTime",
                    "@toNode": "Scr",
                    "@toField": "start_open"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "Scr",
                    "@fromField": "open_start_time",
                    "@toNode": "TimerOpen",
                    "@toField": "set_startTime"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "TimerOpen",
                    "@fromField": "fraction_changed",
                    "@toNode": "OrientOpen",
                    "@toField": "set_fraction"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "OrientOpen",
                    "@fromField": "value_changed",
                    "@toNode": "DoorTransform",
                    "@toField": "set_rotation"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "ProxSens",
                    "@fromField": "exitTime",
                    "@toNode": "Scr",
                    "@toField": "start_close"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "Scr",
                    "@fromField": "close_start_time",
                    "@toNode": "TimerClose",
                    "@toField": "set_startTime"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "TimerClose",
                    "@fromField": "fraction_changed",
                    "@toNode": "OrientClose",
                    "@toField": "set_fraction"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "OrientClose",
                    "@fromField": "value_changed",
                    "@toNode": "DoorTransform",
                    "@toField": "set_rotation"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "K",
                    "@fromField": "keyPress",
                    "@toNode": "Scr",
                    "@toField": "key_press"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "Scr",
                    "@fromField": "prox_sensor_visualize_changed",
                    "@toNode": "ProxSensVisualize",
                    "@toField": "set_whichChoice"
                  }
                }
              ]
            }
          }
        },
        { "Transform":
          {
            "@translation": [ 5.936634, 6.2475, 1.575 ],
            "@rotation": [ 1, 0, -0, 1.57079637050629 ],
            "-children": [
              { "Viewpoint":
                {
                  "@position": [ 0, 0, 0 ],
                  "@orientation": [ -1.02208502994472e-6, 0.999999940395355, 0, 3.0978422164917 ]
                }
              },
              { "Transform":
                {
                  "@translation": [ 0.4, 0.3, 1 ],
                  "@rotation": [ -1.02208502994472e-6, 0.999999940395355, 0, 3.0978422164917 ],
                  "@scale": [ 0.06, 0.06, 0.06 ],
                  "-children": [
                    { "Collision":
                      {
                        "@enabled": false,
                        "-children": [
                          { "Shape":
                            {
                              "-appearance": { "Appearance":
                                {
                                  "-material": { "Material":
                                    {
                                      "@diffuseColor": [ 0.5, 0.5, 0.5 ]
                                    }
                                  }
                                }
                              },
                              "-geometry": { "Text":
                                {
                                  "@string": [
                                    "Simple ProximitySensor demo.",
                                    "Pressing 'b' toggles displaying",
                                    "of the yellow (non-collidable) boxes",
                                    "that visualize ProximitySensors."
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        { "NavigationInfo":
          {
            "@type": [
              "FLY",
              "ANY"
            ],
            "@avatarSize": [
              0.25,
              1.75,
              0.75
            ],
            "@speed": 10
          }
        },
        { "Inline":
          {
            "@global": true,
            "@url": [
              "deranged_house.wrl"
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ 3.1, 4, 0 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ 3.1, -4, 0 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ -11.8, -4, 0 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ 5.1, -8, 0 ],
            "@rotation": [ 0, 0, 1, 1.5707963268 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ 9.1, -8, 0 ],
            "@rotation": [ 0, 0, 1, 1.5707963268 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ 11.3, -6.2, 0 ],
            "@rotation": [ 0, 0, 1, 3.1415926536 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@translation": [ 10.55, -3.1, 0 ],
            "@rotation": [ 0, 0, 1, 3.1415926536 ],
            "-children": [
              { "ProtoInstance":
                {
                  "@name": "Door"
                }
              }
            ]
          }
        },
        { "DirectionalLight":
          {
            "@intensity": 0,
            "@ambientIntensity": 1
          }
        }
      ]
    }
  }
}
