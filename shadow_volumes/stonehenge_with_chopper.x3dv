#X3D V3.2 utf8
PROFILE Interchange

PointLight {
#  intensity 0.5
  location -5.38 20 0
  shadowVolumesMain TRUE
  shadowVolumes TRUE
}

NavigationInfo {
  speed 10
  headlight TRUE
}

# Generated by view3dscene.
# Use view3dscene "Console -> Print Current Camera..." to generate VRML/X3D code like below.
# Camera settings "encoded" in the VRML/X3D declaration below :
#   direction -0.53917878866195679 -0.5292854905128479 0.65509581565856934
#   up -0.51564496755599976 0.82246947288513184 0.24011458456516266
#   gravityUp 0 1 0
Viewpoint {
  position -2.4143199920654297 21.864189147949219 -19.07440185546875
  orientation -0.21831285953521729 0.94789814949035645 0.2320096492767334 2.4177298545837402
}

# Shadow receiver
Transform {
  translation -50  0 20
  scale 0.1 0.1 0.1
  rotation 1 0 0 -1.57
  children Inline { url "stonehenge.wrl" }
}

# Shadow caster (and receiver) too -------------------------------------------

EXTERNPROTO EditableTransform [
  inputOutput MFNode children
  inputOutput SFVec3f translation
  inputOutput SFVec3f scale
  inputOutput SFString description
  inputOutput SFVec2f minPosition
  inputOutput SFVec2f maxPosition
  inputOutput SFVec2f minScale
  inputOutput SFVec2f maxScale
] [ "../prototypes/useful_prototypes.x3dv#EditableTransform" ]

EditableTransform {
  translation -20 7.5 2.5
  minPosition -40 -40
  maxPosition  40  40
  children DEF Chopper Inline { url "chopper/chopper.gltf" }
}

# Start the "fly" animation of chopper as soon as we open the file
IMPORT Chopper.fly
DEF MyProximitySensor ProximitySensor { size 10000000 10000000 10000000 }
ROUTE MyProximitySensor.enterTime TO fly.startTime

# Make the "fly" animation of chopper looping
DEF MyBooleanTrigger BooleanTrigger { }
ROUTE MyProximitySensor.enterTime TO MyBooleanTrigger.set_triggerTime
ROUTE MyBooleanTrigger.triggerTrue TO fly.loop
