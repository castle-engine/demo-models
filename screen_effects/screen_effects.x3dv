#X3D V3.2 utf8
PROFILE Interchange

# Demo of screen effect.
# Press Control / Alt / Shift to keep some of the effects turned down.

# Camera settings "encoded" in the VRML declaration below :
# direction 0 0.700684607028961 0.000241928064497
# up 0 -0.000345317530446 0.999999940395355
# gravityUp 0 0 1
Transform {
  translation 0.004618315026164 -94.837326049804687 6.33106803894043
  rotation 1 0 0 1.570796370506287
  children Viewpoint {
    position 0 0 0 # camera position is expressed by translation
    orientation 0 0 1 0
  }
}

NavigationInfo {
  type "WALK"
  speed 20
  avatarSize [ 0.5 4 ]
}

Inline { url "../castle/old/vrml_2/castle_with_lights.wrl" }

DEF SE1 ScreenEffect {
  # enabled FALSE
  shaders ComposedShader {
    language "GLSL"
    parts ShaderPart {
      type "FRAGMENT"
      url "data:text/plain,
      void main (void)
      {
        gl_FragColor = screenf_get_original_color();
        gl_FragColor.b = 0.0;
      }
      "
    }
  }
}

DEF SE2 ScreenEffect {
  # enabled FALSE
  shaders ComposedShader {
    language "GLSL"
    parts ShaderPart {
      type "FRAGMENT"
      url "data:text/plain,
      void main (void)
      {
        gl_FragColor = screenf_get_original_color();
        // no sensible way to make modulo in GLSL on ints, for both OpenGLES and desktop OpenGL
        if (int(mod(screenf_x(), 40.0)) == 35) {
          gl_FragColor.g = 2.0 / 10.0;
        }
      }
      "
    }
  }
}

DEF SE3 ScreenEffect {
  # enabled FALSE
  shaders ComposedShader {
    language "GLSL"
    parts ShaderPart {
      type "FRAGMENT"
      url "data:text/plain,
      void main (void)
      {
        vec2 pos = screenf_position();
        pos.x += sin(screenf_y() / 10.0) * 10.0;
        gl_FragColor = screenf_get_color(pos);
      }
      "
    }
  }
}

DEF K KeySensor { }

DEF BFAlt BooleanFilter { }
ROUTE K.altKey TO BFAlt.set_boolean
ROUTE BFAlt.inputNegate TO SE1.enabled

DEF BFControl BooleanFilter { }
ROUTE K.controlKey TO BFControl.set_boolean
ROUTE BFControl.inputNegate TO SE2.enabled

DEF BFShift BooleanFilter { }
ROUTE K.shiftKey TO BFShift.set_boolean
ROUTE BFShift.inputNegate TO SE3.enabled

# some more screen effects (disabled by default) --------------------------------------------

ScreenEffect {
  enabled FALSE
  shaders ComposedShader {
    language "GLSL"
    parts ShaderPart {
      type "FRAGMENT"
      url "data:text/plain,
      void main (void)
      {
        gl_FragColor = screenf_get_original_color() / 2.0;
      }
      "
    }
  }
}

ScreenEffect {
  enabled FALSE
  shaders ComposedShader {
    language "GLSL"
    parts ShaderPart {
      type "FRAGMENT"
      url "data:text/plain,
      void main (void)
      {
        vec2 pos = screenf_position();
        pos.y = float(screen_height) - pos.y;
        gl_FragColor = screenf_get_color(pos);
      }
      "
    }
  }
}

ScreenEffect { } # just to test that it does nothing
