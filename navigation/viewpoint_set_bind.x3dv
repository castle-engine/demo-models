#X3D V3.2 utf8
PROFILE Interchange

# This is to test Viewpoint.set_bind features for X3D.

NavigationInfo {
  type "FLY"
  avatarSize [ 0.5 2 0.5 ]
  speed 20
}

# Camera settings "encoded" in the VRML declaration below :
# direction 0.018567405641079 0.399568855762482 -0.000000638432709
# up 3.27224097418366E-006 1.40198903864075E-006 1
# gravityUp 0 0 1
Transform {
  translation -12.041908264160156 -61.640647888183594 2
  rotation 1 0 0 1.570796370506287
  children [
    DEF Viewpoint1 Viewpoint {
      position 0 0 0 # camera position is expressed by translation
      orientation -0.000035324712371 -0.999984502792358 -0 0.046436563134193
      description "Down"
    }

    Transform {
      translation -5 1 -15
      children Shape {
        appearance Appearance { material Material { diffuseColor 1 1 0 } }
        geometry Text { string [
          "- Press '1' to   bind the 1st Viewpoint"
          "- Press '2' to unbind the 1st Viewpoint"
          "- Press '3' to   bind the 2nd Viewpoint"
          "- Press '4' to unbind the 2nd Viewpoint"
          ]
        }
      }
    }
  ]
}

# Camera settings "encoded" in the VRML declaration below :
# direction -0.085718996822834 -0.2145459800958633 -0.3265302181243896
# up -0.3028728067874908 -0.758062720298767 0.5775911211967468
# gravityUp 0 0 1
Transform {
  translation -4.5111379623413086 -9.5669622421264648 62.81707763671875
  rotation 1 0 0 1.5707963705062866
  children [
    DEF Viewpoint2 Viewpoint {
      position 0 0 0 # camera position is expressed by translation
      orientation -0.0880664512515068 0.8846906423568725 0.4577844142913818 2.8044400215148926
      description "Up"
    }

    Transform {
      translation 2 -10 13
      rotation -0.0880664512515068 0.8846906423568725 0.4577844142913818 2.8044400215148926
      children Shape {
        appearance Appearance { material Material { diffuseColor 0 0 1 } }
        geometry Text { string [
          "DON'T LOOK DOWN! Too late..."
          "- Press '1' to   bind the 1st Viewpoint"
          "- Press '2' to unbind the 1st Viewpoint"
          "- Press '3' to   bind the 2nd Viewpoint"
          "- Press '4' to unbind the 2nd Viewpoint"
          ]
        }
      }
    }
  ]
}

Fog {
  color 0 0 0
  visibilityRange 200
  fogType "EXPONENTIAL"
}

Inline { url "../castle/old/vrml_2/castle_with_lights.wrl" }

DEF KS KeySensor { }
DEF MyScript Script {
  inputOnly SFString keyPress
  outputOnly SFBool bind1
  outputOnly SFBool bind2
  url "castlescript:

    function keyPress(value, timestamp)
      when (value = '1', bind1 := true);
      when (value = '2', bind1 := false);
      when (value = '3', bind2 := true);
      when (value = '4', bind2 := false)"
}
ROUTE KS.keyPress TO MyScript.keyPress
ROUTE MyScript.bind1 TO Viewpoint1.set_bind
ROUTE MyScript.bind2 TO Viewpoint2.set_bind

# Test isBound output by Logger
# DEF L Logger { level 3 }
# ROUTE Viewpoint1.isBound TO L.write
# ROUTE Viewpoint2.isBound TO L.write
