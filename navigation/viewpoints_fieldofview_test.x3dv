#X3D V3.2 utf8
PROFILE Interchange

# Test of Viewpoint nodes handling.

NavigationInfo {
  type "FLY"
  speed 10
}

# Camera settings "encoded" in all VRML declaration below :
# direction 0 0.700684607028961 0.000241928064497
# up 0 -0.000345317530446 0.999999940395355
# gravityUp 0 0 1

Group{
  children [
    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V1 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        description "45 degrees (default) field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V2 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        # dummy value, should be clamped to min value by VRML browser
        fieldOfView -10000
        description "MIN field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V3 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 0.0872664626
        description "5 degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V4 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 0.3490658504
        description "20 degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V5 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 1.04
        description "60 degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V6 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 1.57
        description "90 degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V7 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 2.0943951024
        description "120 degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V8 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 2.6179938780
        description "150 degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V9 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        fieldOfView 3.1415926536
        description "180 (Pi) degress field of view"
      }
    }

    Transform {
      translation 0.004618315026164 -94.837326049804687 6.33106803894043
      rotation 1 0 0 1.570796370506287
      children DEF V10 Viewpoint {
        position 0 0 0 # camera position is expressed by translation
        orientation 0 0 1 0
        # dummy value, should be clamped to max value by VRML browser
        fieldOfView 10000
        description "MAX field of view"
      }
    }

    Inline { url "../castle/old/vrml_2/castle_with_lights.wrl" }
  ]
}

# ----------------------------------------------------------------------------
# Trivial Script + KeySensor, to send set_bind = TRUE to viewpoints
# by pressing keys.

DEF MyKeySensor KeySensor { }
DEF MyScript Script {
  inputOnly SFString keyPress
  outputOnly SFBool set_bind_v1
  outputOnly SFBool set_bind_v2
  outputOnly SFBool set_bind_v3
  outputOnly SFBool set_bind_v4
  outputOnly SFBool set_bind_v5
  outputOnly SFBool set_bind_v6
  outputOnly SFBool set_bind_v7
  outputOnly SFBool set_bind_v8
  outputOnly SFBool set_bind_v9
  outputOnly SFBool set_bind_v10
  url "castlescript:

function keyPress(value, timestamp)
  when (value = '1', set_bind_v1 := true);
  when (value = '2', set_bind_v2 := true);
  when (value = '3', set_bind_v3 := true);
  when (value = '4', set_bind_v4 := true);
  when (value = '5', set_bind_v5 := true);
  when (value = '6', set_bind_v6 := true);
  when (value = '7', set_bind_v7 := true);
  when (value = '8', set_bind_v8 := true);
  when (value = '9', set_bind_v9 := true);
  when (value = '0', set_bind_v10 := true)
"
}

ROUTE MyKeySensor.keyPress TO MyScript.keyPress
ROUTE MyScript.set_bind_v1 TO V1.set_bind
ROUTE MyScript.set_bind_v2 TO V2.set_bind
ROUTE MyScript.set_bind_v3 TO V3.set_bind
ROUTE MyScript.set_bind_v4 TO V4.set_bind
ROUTE MyScript.set_bind_v5 TO V5.set_bind
ROUTE MyScript.set_bind_v6 TO V6.set_bind
ROUTE MyScript.set_bind_v7 TO V7.set_bind
ROUTE MyScript.set_bind_v8 TO V8.set_bind
ROUTE MyScript.set_bind_v9 TO V9.set_bind
ROUTE MyScript.set_bind_v10 TO V10.set_bind
