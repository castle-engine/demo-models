#X3D V3.2 utf8
PROFILE Interchange
COMPONENT Shaders:1

# PointLight { location 0 0 0 }

# ----------------------------------------------------------------------------
# row 1 - no shader

Group {
  children [

    Shape {
      appearance DEF App1_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        material DEF Mat Material { specularColor 1 1 1 }
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App1_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App1_NoTexture Appearance {
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}

# ----------------------------------------------------------------------------
# row 2 - simple shader

Transform {
  translation 0 3 0
  children [

    Shape {
      appearance DEF App2_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        shaders [
          # We don't handle HLSL now, as we don't have Direct3D renderer.
          # TODO: Though https://github.com/Microsoft/ShaderConductor
          # could be a way to use HLSL even with OpenGL(ES) renderer.
          #
          # For now this is just to test that such ProgramShader is correctly parsed and ignored.
          ProgramShader {
            language "HLSL"
            programs [
              ShaderProgram { type "VERTEX" }
              ShaderProgram { type "FRAGMENT" }
            ] }
          # Actual test of OpenGL shader.
          DEF CompShader2 ComposedShader {
            language "GLSL"
            parts [
              ShaderPart { type "VERTEX" url "glsl/simple.vs" }
              ShaderPart { type "FRAGMENT" url "glsl/simple.fs" }
            ]
          }
        ]
        material USE Mat
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App2_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App2_NoTexture Appearance {
            # Just like AppShaderTestWithTexture, but a little simplified.
            # CompShaderTest is reused, so it should be reused (even though
            # Appearance node is different).
            shaders USE CompShader2
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}

# ----------------------------------------------------------------------------
# row 3 - phong shader

Transform {
  translation 0 6 0
  children [

    Shape {
      appearance DEF App3_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        shaders [
          DEF CompShader3 ComposedShader {
            language "GLSL"
            parts [
              ShaderPart { type "VERTEX" url "glsl/phong_shading.vs" }
              ShaderPart { type "FRAGMENT" url "glsl/phong_shading.fs" }
            ]
          }
        ]
        material USE Mat
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App3_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App3_NoTexture Appearance {
            # Just like AppShaderTestWithTexture, but a little simplified.
            # CompShaderTest is reused, so it should be reused (even though
            # Appearance node is different).
            shaders USE CompShader3
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}

# ----------------------------------------------------------------------------
# row 4 - toon shader

Transform {
  translation 0 9 0
  children [

    Shape {
      appearance DEF App4_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        shaders [
          DEF CompShader4 ComposedShader {
            language "GLSL"
            parts [
              ShaderPart { type "VERTEX" url "glsl/toon_shading.vs" }
              ShaderPart { type "FRAGMENT" url "glsl/toon_shading.fs" }
            ]
          }
        ]
        material USE Mat
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App4_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App4_NoTexture Appearance {
            # Just like AppShaderTestWithTexture, but a little simplified.
            # CompShaderTest is reused, so it should be reused (even though
            # Appearance node is different).
            shaders USE CompShader4
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}

# ----------------------------------------------------------------------------
# row 5 - only fragment shader (negative)

Transform {
  translation 0 12 0
  children [

    Shape {
      appearance DEF App5_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        shaders [
          DEF CompShader5 ComposedShader {
            language "GLSL"
            parts [
              ShaderPart { type "VERTEX" url "glsl/negative.vs" }
              ShaderPart { type "FRAGMENT" url "glsl/negative.fs" }
            ]
          }
        ]
        material USE Mat
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App5_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App5_NoTexture Appearance {
            # Just like AppShaderTestWithTexture, but a little simplified.
            # CompShaderTest is reused, so it should be reused (even though
            # Appearance node is different).
            shaders USE CompShader5
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}

# ----------------------------------------------------------------------------
# row 6 - only vertex shader (some deform)

Transform {
  translation 0 15 0
  children [

    Shape {
      appearance DEF App6_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        shaders [
          DEF CompShader6 ComposedShader {
            language "GLSL"
            parts [
              ShaderPart { type "VERTEX" url "glsl/some_deform.vs" }
              ShaderPart { type "FRAGMENT" url "glsl/simple.fs" }
            ]
          }
        ]
        material USE Mat
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App6_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App6_NoTexture Appearance {
            # Just like AppShaderTestWithTexture, but a little simplified.
            # CompShaderTest is reused, so it should be reused (even though
            # Appearance node is different).
            shaders USE CompShader6
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}

# ----------------------------------------------------------------------------
# row 7 - toon shader, with fragment part split into 2 shader files

Transform {
  translation 0 18 0
  children [

    Shape {
      appearance DEF App7_WithTexture Appearance {
        texture ImageTexture  { url "../textures/bricks2.jpg" }
        shaders [
          DEF CompShader7 ComposedShader {
            language "GLSL"
            parts [
              # This is a valid GLSL program, two fragment shaders but only
              # one of them has main() function.
              ShaderPart { type "FRAGMENT" url "glsl/toon_shading_2_helper.fs" }
              ShaderPart { type "FRAGMENT" url "glsl/toon_shading_2_main.fs" }
              ShaderPart { type "VERTEX" url "glsl/toon_shading.vs" }
            ]
          }
        ]
        material USE Mat
      }
      geometry Sphere { }
    }

    Transform {
      translation 3 0 0
      children
        Shape {
          appearance USE App7_WithTexture
          geometry Box { }
        }
    }

    Transform {
      translation 6 0 0
      children
        Shape {
          appearance DEF App7_NoTexture Appearance {
            # Just like AppShaderTestWithTexture, but a little simplified.
            # CompShaderTest is reused, so it should be reused (even though
            # Appearance node is different).
            shaders USE CompShader7
            material USE Mat
          }
          geometry Cylinder { }
        }
    }
  ]
}
