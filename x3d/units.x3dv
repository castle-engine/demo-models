#X3D V3.3 utf8

# ---------------------------------------------------------------------
# Test of UNIT statement
# (see X3D spec: https://www.web3d.org/documents/specifications/19775-1/V4.0/Part01/components/core.html#UNITStatement ).
#
# How does Castle Model Viewer ( https://castle-engine.io/castle-model-viewer )
# handle the UNIT:
#
# - "angle" is correctly handled.
#   Internally, all angles are converted to radians when parsing the X3D file.
#   The correct rendering of this file should show two cylinders,
#   yellow and blue, oriented the same way.
#
# - "length" is correctly handled.
#   Internally, it results in an internal transformation that scales the content.
#   When you load a model, we adjust the scale to make the content be expressed
#   in meters. When you Inline one model in another, we adjust the scale
#   to make it match.
#
# - "force" and "mass" are just ignored.
#   As we don't support the X3D physics component now, they have no use.
#   Castle Game Engine has its own physics components,
#   https://castle-engine.io/physics , that exist "outside" of X3D models.
# ---------------------------------------------------------------------

PROFILE Interchange

COMPONENT Rendering:5

UNIT angle degrees 0.017453293 # pi / 180
UNIT length km 1000
UNIT force foo 123.456
UNIT mass bar 789

Transform {
  rotation 0.001 0 0 90
  children Shape {
    appearance Appearance { material Material { diffuseColor 1 1 0 } }
    geometry Cylinder { height 0.002 radius 0.001 }
  }
}

Inline { url "units_helper.x3dv" }
