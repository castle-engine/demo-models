#X3D V3.2 utf8
PROFILE Interchange

# This is to test Background.set_bind features for X3D.

Transform {
  translation 0 -2 0
  children Shape {
    appearance Appearance { material Material { diffuseColor 1 1 0 } }
    geometry Text { string [
      "press 'q' to   bind the 1st background",
      "press 'w' to unbind the 1st background" ] }
  }
}

Transform {
  translation 0 -4 0
  children Shape {
    appearance Appearance { material Material { diffuseColor 0.2 0.2 0.2 } }
    geometry Text { string [
      "press 'e' to   bind the 2nd background",
      "press 'r' to unbind the 2nd background" ] }
  }
}

DEF Background1 Background {
  # add some textures
  skyColor [ 1 0 0, 1 1 0, 0 1 0, 0 0 1, 1 1 1, 0 0 0, 1 1 1, 0 0 0, ]
  skyAngle [        0.8,   2,     2.5,   2.6,   2.7,   2.8,   2.9, ]
  groundColor [ 0 0.5 0, 0 0.25 0.25 ]
  groundAngle [          1 ]
  rightUrl "../skies/sky_lake_left.png"
  frontUrl "../skies/sky_lake_back.png"
}

Transform {
  rotation 1 0 0 1.57
  children DEF Background2 Background {
    backUrl "../skies/sky_red_back.png"
    bottomUrl "../skies/sky_red_bottom.png"
    frontUrl "../skies/sky_red_front.png"
    leftUrl "../skies/sky_red_left.png"
    rightUrl "../skies/sky_red_right.png"
    topUrl "../skies/sky_red_top.png"
  }
}

DEF KS KeySensor { }
DEF MyScript Script {
  inputOnly SFString keyPress
  outputOnly SFBool bind1
  outputOnly SFBool bind2
  url "castlescript:

    function keyPress(value, timestamp)
      when (value = 'q', bind1 := true);
      when (value = 'w', bind1 := false);
      when (value = 'e', bind2 := true);
      when (value = 'r', bind2 := false)"
}
ROUTE KS.keyPress TO MyScript.keyPress
ROUTE MyScript.bind1 TO Background1.set_bind
ROUTE MyScript.bind2 TO Background2.set_bind

# Test isBound output by Logger
# DEF L Logger { level 3 }
# ROUTE Background1.isBound TO L.write
# ROUTE Background2.isBound TO L.write
