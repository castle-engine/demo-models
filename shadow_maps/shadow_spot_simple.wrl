#VRML V2.0 utf8

# ----------------------------------------------------------------------
# Simple shadow map test.
# SpotLight looks directly at box side.
# By Jan Adamec + tweaks by Michalis.
# ----------------------------------------------------------------------

# Generated by castle-model-viewer.
# Use castle-model-viewer "Clipboard -> Print Current Camera..." to generate X3D code like below.
# Camera settings "encoded" in the X3D declaration below :
#   position -2.24204 2.44803 5.22303
#   direction 0.37701 -0.29384 -0.87836
#   up 0.06778 0.95455 -0.29024
#   gravityUp 0 1 0
Viewpoint {
  position -2.2420437335968018 2.4480347633361816 5.2230324745178223
  orientation -0.61086684465408325 -0.79151219129562378 -0.01871090941131115 0.49846252799034119
  autoCenterOfRotation TRUE
}

NavigationInfo {
	headlight FALSE
}

# box - shadow caster
DEF TransformShadowCaster Transform {
	translation	0 1 0
	scale .5 .5 .5
	children Shape {
		geometry Box {}
		appearance	Appearance {
			material Material { diffuseColor .8 .8 .1 }
		}
	}
}

# Animate shadow caster rotation, to keep it interesting
DEF Timer TimeSensor { loop TRUE }
DEF Interp OrientationInterpolator {
	# note: we need to have a few keyframes in the middle to keep rotation interpolation defined
  key [ 0 0.25 0.5 0.75 1 ]
  keyValue [
    0 1 0 0,
    0 1 0 1.57, # 0.5 * pi
    0 1 0 3.14, # pi
    0 1 0 4.71, # 1.5 * pi
    0 1 0 0
  ]
}
ROUTE Timer.fraction_changed TO Interp.set_fraction
ROUTE Interp.value_changed TO TransformShadowCaster.rotation

# box - shadow receiver
Transform
{
	scale 2 .1 2
	children Shape {
		geometry Box {}
		appearance	Appearance {
			material Material { diffuseColor .1 .8 .1 }
		}
	}
}

# light source casting shadows
SpotLight {
	location 0 4 0
	direction 0 -1 0
	ambientIntensity .4
	shadows TRUE
}

# additional light source, to not have the rest completely dark
PointLight {
	location 4 4 4
	intensity 0.2
}